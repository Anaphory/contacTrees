<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE note [
    <!ENTITY blockrange "0,1,2,3,4,5,6,7,8,9">
]>
<beast version='2.0'
       namespace='beast.evolution.tree.coalescent
                 :beast.evolution.alignment
                 :beast.evolution.operators
                 :beast.core
                 :beast.core.parameter
                 :beast.evolution.sitemodel
                 :beast.evolution.substitutionmodel
                 :contactrees
                 :contactrees.model
                 :contactrees.util
                 :contactrees.operators'>


<data id="data:nodata" name="alignment" dataType="binary">
    <sequence id="seq_A" taxon="A" totalcount="2" value="?"/>
    <sequence id="seq_B" taxon="B" totalcount="2" value="?"/>
    <sequence id="seq_C" taxon="C" totalcount="2" value="?"/>
    <sequence id="seq_D" taxon="D" totalcount="2" value="?"/>
    <sequence id="seq_E" taxon="E" totalcount="2" value="?"/>
    <sequence id="seq_F" taxon="F" totalcount="2" value="?"/>
    <sequence id="seq_G" taxon="G" totalcount="2" value="?"/>
    <sequence id="seq_H" taxon="H" totalcount="2" value="?"/>
    <sequence id="seq_I" taxon="I" totalcount="2" value="?"/>
    <sequence id="seq_J" taxon="J" totalcount="2" value="?"/>
</data>

<stateNode spec="BlockSet" id="allBlocks" network="@acg">
    <plate var="n" range="&blockrange;">
        <block spec="Block" id="block.$(n)"/>
    </plate>
</stateNode>

<plate var="x" range="&blockrange;">
    <distribution id="treeLikelihood.block$(x)" spec="beast.evolution.likelihood.TreeLikelihood" data="@data:nodata">
        <tree id="marginalTree.$(x)" spec="MarginalTree" network="@acg" block="@block.$(x)" nodetype="contactrees.MarginalNode"/>   
        <branchRateModel spec="beast.evolution.branchratemodel.StrictClockModel" clock.rate="1.0"/>
        <siteModel spec="SiteModel">
            <substModel spec="GeneralSubstitutionModel" rates="1.0 1.0">
                <frequencies spec="Frequencies" frequencies="0.5 0.5"/>
            </substModel> 
        </siteModel>
    </distribution>
</plate>

<run id="mcmc" spec="MCMC" chainLength="$(chainLength)">

 	<state id="state" storeEvery="$(logInterval)">
    	<!-- Define the conversion graph -->
        <stateNode id="acg" spec="ConversionGraph">
	        <taxonset id="taxa" spec="TaxonSet" alignment="@data:nodata"/>
        </stateNode>
    	
        <plate var="n" range="&blockrange;">
			<stateNode idref="block.$(n)"/>
		</plate>
        
        <stateNode id="pMove" spec="RealParameter" estimate="false" value="$(pMove)"/>
		<stateNode id="conversionRate" spec="RealParameter" estimate="false" value="$(convRate)"/>
        <stateNode id="popSize" spec="RealParameter" estimate="false" value="$(popSize)"/>
 	</state>
 	
 	<init id="RandomACG" spec="beast.evolution.tree.RandomTree" estimate="false" initial="@acg" taxa="@data:nodata">
        <populationModel id="ConstantPopulation0.t" spec="ConstantPopulation" popSize="@popSize"/>
    </init>

   <distribution id="posterior" spec="util.CompoundDistribution">
        <distribution id="prior" spec="util.CompoundDistribution">
            <distribution id="CoalescentConstant.t:treeSim" spec="Coalescent">
                <populationModel id="ConstantPopulation.t" spec="ConstantPopulation" popSize="@popSize"/>
                <treeIntervals id="TreeIntervals.t:treeSim" spec="TreeIntervals" tree="@acg"/>
            </distribution>

            <distribution id="ConversionPrior.t:treeSim" spec="contactrees.model.ConversionPrior" network="@acg" conversionRate="@conversionRate"/>
            <distribution id="ConvMovePrior.t:treeSim" spec="ConversionMovePrior" network="@acg" blockSet="@allBlocks" pMove="@pMove"/>
        </distribution>
    </distribution>
	

	<operatorschedule id="schedule" spec="contactrees.test.OrderedOperatorSchedule">
	 	<operator id="SimumlateOp" spec="contactrees.test.SimulatorOperator" network="@acg" blockSet="@allBlocks" 
	 	 		  pMove="@pMove" conversionRate="@conversionRate" weight="1.0">
	 		<populationModel spec="ConstantPopulation" popSize="$(popSize)"/>
	 	</operator>
	 	
	 	<operator id="ConvertedEdgeHopGibbs.t" spec="ConvertedEdgeHopGibbs" acg="@acg" weight="9999.0"
	 	          conversionRate="@conversionRate" pMove="@pMove" blockSet="@allBlocks">
            <plate var="n" range="&blockrange;">
                <treeLikelihood idref="treeLikelihood.block$(n)"/>
            </plate>
        </operator> 
	</operatorschedule>
	
    <logger id="screenlog" logEvery="$(logInterval)">
        <log idref="posterior"/>
        <log idref="prior"/>
        <log spec="ACGStatsLogger" network="@acg" blockSet="@allBlocks"/>
    </logger>

    <logger logEvery="$(logInterval)" fileName="$(filebase).stats">
        <log idref="posterior"/>
        <log idref="prior"/>
        <log spec="ACGStatsLogger" network="@acg" blockSet="@allBlocks"/>
    </logger>

    <logger logEvery="$(logInterval)" fileName="$(filebase).trees">
    	<log spec="ACGWithMetaDataLogger" network="@acg" blockSet="@allBlocks"/>
    </logger>
</run>
  
</beast>
